# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2018-05-24 04:40
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'User',
            },
        ),
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('symbol', models.CharField(max_length=5, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='BetaTester',
            fields=[
                ('date', models.DateField(auto_now_add=True)),
                ('email', models.EmailField(db_index=True, max_length=254, primary_key=True, serialize=False, unique=True)),
            ],
            options={
                'verbose_name': 'Beta Tester',
            },
        ),
        migrations.CreateModel(
            name='ConnectedAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('symbol', models.CharField(max_length=5)),
                ('label', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='ConnectedExchange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('label', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Identity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bitbutter_user_id', models.UUIDField(null=True)),
                ('bitbutter_api_key', models.CharField(max_length=255, null=True)),
                ('bitbutter_secret', models.CharField(max_length=255, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Identities',
            },
        ),
        migrations.CreateModel(
            name='IPAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.GenericIPAddressField(db_index=True)),
                ('last_login', models.DateTimeField(auto_now=True)),
                ('user_agent', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=255)),
                ('country', models.CharField(max_length=255)),
                ('region', models.CharField(max_length=255)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ip_addresses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'IP Address',
                'verbose_name_plural': 'IP Addresses',
            },
        ),
        migrations.CreateModel(
            name='Portfolio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(default=0.0)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Asset')),
                ('portfolio', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='positions', to='api.Portfolio')),
            ],
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_index=True)),
                ('price', models.FloatField(default=0.0)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prices', to='api.Asset')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('local_currency', models.CharField(choices=[('usd', 'USD (United States dollar)')], default='usd', max_length=255)),
                ('time_zone', models.CharField(choices=[('pst', 'US/Pacific'), ('utc', 'UTC')], default='pst', max_length=255)),
                ('email_notification', models.CharField(choices=[('quarterly', 'Quarterly'), ('monthly', 'Monthly'), ('weekly', 'Weekly'), ('daily', 'Daily'), ('off', 'Off')], default='weekly', max_length=255)),
                ('two_factor_enabled', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='settings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'settings',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('category', models.CharField(choices=[('buy', 'Buy'), ('sell', 'Sell'), ('exchange_deposit', 'Exchange Deposit'), ('exchange_withdrawal', 'Exchange Withdrawal'), ('address_withdrawal', 'Address Withdrawal'), ('address_deposit', 'Address Deposit'), ('internal_address_withdrawal', 'Internal Address Withdrawal'), ('internal_address_deposit', 'Internal Address Deposit')], max_length=255)),
                ('base', models.CharField(max_length=5, validators=[django.core.validators.RegexValidator('[A-Z]+')])),
                ('quote', models.CharField(max_length=5, validators=[django.core.validators.RegexValidator('[A-Z]+')])),
                ('base_size', models.FloatField(default=0.0)),
                ('quote_size', models.FloatField(default=0.0)),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='api.Portfolio')),
            ],
        ),
        migrations.AddField(
            model_name='asset',
            name='portfolio',
            field=models.ManyToManyField(blank=True, related_name='assets', through='api.Position', to='api.Portfolio'),
        ),
        migrations.AlterUniqueTogether(
            name='price',
            unique_together=set([('date', 'asset')]),
        ),
        migrations.AlterUniqueTogether(
            name='ipaddress',
            unique_together=set([('ip', 'user', 'user_agent')]),
        ),
    ]
