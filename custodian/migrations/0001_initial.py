# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2017-10-14 06:39
from __future__ import unicode_literals

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('BTC', models.DecimalField(decimal_places=8, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('ETH', models.DecimalField(decimal_places=18, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('LTC', models.DecimalField(decimal_places=8, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('BCH', models.DecimalField(decimal_places=8, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('XRP', models.DecimalField(decimal_places=6, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('USDT', models.DecimalField(decimal_places=18, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('NEO', models.DecimalField(decimal_places=0, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('XMR', models.DecimalField(decimal_places=12, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('ETP', models.DecimalField(decimal_places=8, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('IOT', models.DecimalField(decimal_places=0, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('ZEC', models.DecimalField(decimal_places=8, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('OMG', models.DecimalField(decimal_places=18, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('DSH', models.DecimalField(decimal_places=8, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('ETC', models.DecimalField(decimal_places=18, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('AVT', models.DecimalField(decimal_places=18, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('EOS', models.DecimalField(decimal_places=18, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('QTM', models.DecimalField(decimal_places=18, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('SAN', models.DecimalField(decimal_places=18, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('BCU', models.DecimalField(decimal_places=8, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
            ],
        ),
        migrations.CreateModel(
            name='Trade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('trade_type', models.CharField(choices=[('Buy', 'Buy'), ('Sell', 'Sell')], max_length=4)),
                ('base_coin', models.CharField(choices=[('BTC', 'Bitcoin'), ('ETH', 'Ethereum'), ('LTC', 'Litecoin'), ('BCH', 'Bitcoin Cash'), ('XRP', 'Ripple'), ('USDT', 'Tether'), ('NEO', 'NEO'), ('XMR', 'Monero'), ('ETP', 'Metaverse ETP'), ('IOT', 'IOTA'), ('ZEC', 'Zcash'), ('OMG', 'OmiseGO'), ('DSH', 'Dash'), ('ETC', 'Ethereum Classic'), ('AVT', 'Aventus'), ('EOS', 'EOS'), ('QTM', 'Qtum'), ('SAN', 'Santiment Network Token'), ('BCU', 'Bitcoin Unlimited (Futures)')], max_length=4)),
                ('counter_coin', models.CharField(choices=[('BTC', 'Bitcoin'), ('ETH', 'Ethereum'), ('LTC', 'Litecoin'), ('BCH', 'Bitcoin Cash'), ('XRP', 'Ripple'), ('USDT', 'Tether'), ('NEO', 'NEO'), ('XMR', 'Monero'), ('ETP', 'Metaverse ETP'), ('IOT', 'IOTA'), ('ZEC', 'Zcash'), ('OMG', 'OmiseGO'), ('DSH', 'Dash'), ('ETC', 'Ethereum Classic'), ('AVT', 'Aventus'), ('EOS', 'EOS'), ('QTM', 'Qtum'), ('SAN', 'Santiment Network Token'), ('BCU', 'Bitcoin Unlimited (Futures)')], max_length=4)),
                ('pair', models.CharField(choices=[('Bitfinex', (('BTC/USD', 'Bitcoin - US Dollar'), ('ETH/USD', 'Ethereum - US Dollar'), ('ETH/BTC', 'Ethereum - Bitcoin'), ('LTC/USD', 'Litecoin - US Dollar'), ('BCH/USD', 'Bitcoin Cash - US Dollar'), ('XRP/USD', 'Ripple - US Dollar'), ('USDT/USD', 'Tether - US Dollar'), ('BCH/BTC', 'Bitcoin Cash - Bitcoin'), ('NEO/USD', 'NEO - US Dollar'), ('LTC/BTC', 'Litecoin - Bitcoin'), ('XRP/BTC', 'Ripple - Bitcoin'), ('XMR/USD', 'Monero - US Dollar'), ('ETP/USD', 'Metaverse ETP - US Dollar'), ('IOT/BTC', 'IOTA - Bitcoin'), ('ZEC/USD', 'Zcash - US Dollar'), ('OMG/USD', 'OmiseGO - US Dollar'), ('DSH/USD', 'Dash - US Dollar'), ('NEO/BTC', 'NEO - Bitcoin'), ('IOT/BTC', 'IOTA - Bitcoin'), ('ZEC/BTC', 'Zcash - Bitcoin'), ('ETP/BTC', 'Metaverse ETP - Bitcoin'), ('ETC/USD', 'Ethereum Classic - US Dollar'), ('DSH/BTC', 'Dash - Bitcoin'), ('XMR/BTC', 'Monero - Bitcoin'), ('OMG/BTC', 'OmiseGO - Bitcoin'), ('AVT/USD', 'Aventus - US Dollar'), ('EOS/USD', 'EOS - US Dollar'), ('ETH/BTC', 'Ethereum Classic - Bitcoin'), ('EOS/ETH', 'EOS - Ethereum'), ('QTM/BTC', 'Qtum - Bitcoin'), ('ETP/ETH', 'Metaverse ETP - Ethereum'), ('QTM/USD', 'Qtum - US Dollar'), ('OMG/ETH', 'OmiseGO - Ethereum'), ('NEO/ETH', 'NEO - Ethereum'), ('IOT/ETH', 'IOTA - Ethereum'), ('AVT/BTC', 'Aventus - Bitcoin'), ('BCH/ETH', 'Bitcoin Cash - Ethereum'), ('EOS/BTC', 'EOS - Bitcoin'), ('AVT/ETH', 'Aventus - Ethereum'), ('SAN/USD', 'Santiment Network Token - USD'), ('SAN/BTC', 'Santiment Network Token - BTC'), ('SAN/ETH', 'Santiment Network Token - ETH'), ('QTM/ETH', 'Qtum - Ethereum'), ('BCU/USD', 'Bitcoin Unlimited (Futures)/US Dollar'))), ('GDAX', (('BTC/USD', 'Bitcoin - US Dollar'), ('ETH/USD', 'Ethereum - US Dollar'), ('LTC/USD', 'Litecoin - US Dollar'), ('ETH/BTC', 'Ethereum - Bitcoin'), ('LTC/BTC', 'Litecoin - Bitcoin')))], max_length=9)),
                ('exchange', models.CharField(choices=[('Bitfinex', 'Bitfinex'), ('GDAX', 'GDAX')], max_length=255)),
                ('amount', models.DecimalField(decimal_places=15, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('cost_basis', models.DecimalField(decimal_places=15, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('fees', models.DecimalField(decimal_places=15, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('cost_basis_usd', models.DecimalField(decimal_places=2, default=models.DecimalField(decimal_places=15, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))]), max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('fees_usd', models.DecimalField(decimal_places=2, default=models.DecimalField(decimal_places=15, max_digits=30, validators=[django.core.validators.MinValueValidator(Decimal('0'))]), max_digits=6, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
